name: Template ACA

on:
  workflow_call:
    inputs:
      CONTAINER_NAME:
        required: true
        type: string
      DOCKER_PATH:
        required: true
        type: string      
      DOCKER_BUILD_CONTEXT:
        required: true
        type: string
      ACA_ENVIRONMENT:
        required: true
        type: string
       
jobs:
  buildImage:
   runs-on: ubuntu-latest
   environment: ${{ inputs.ACA_ENVIRONMENT }}
   steps:
      - uses: actions/checkout@v4
      - name: Azure login
        uses: azure/login@v2
        with:
         creds: ${{ secrets.AZURE_CREDENTIALS }}
      # Builds and pushes an image up to your Azure Container Registry
      - name: Build and push image to ACR
        run: |
          AZURE_CONTAINER_REGISTRY=$(az acr list --resource-group ${{ vars.RESOURCE_GROUP }} --query '[0].name' --output tsv)
          az acr build --image ${AZURE_CONTAINER_REGISTRY}.azurecr.io/${{ inputs.CONTAINER_NAME }}:latest --registry ${AZURE_CONTAINER_REGISTRY} -g ${{ vars.RESOURCE_GROUP }} -f ${{ inputs.DOCKER_PATH }} ${{ inputs.DOCKER_BUILD_CONTEXT }}
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.ACA_ENVIRONMENT }}
    needs: [buildImage]
    steps:
      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v2
        with:
         creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy Container Apps
        uses: azure/CLI@v1
        with:
          inlineScript: >
            AZURE_CONTAINER_REGISTRY=$(az acr list --resource-group ${{ vars.RESOURCE_GROUP }} --query '[0].name' --output tsv)
            az containerapp update -n ${{ inputs.CONTAINER_NAME }} -g ${{ vars.RESOURCE_GROUP }} -i ${AZURE_CONTAINER_REGISTRY}.azurecr.io/${{ inputs.CONTAINER_NAME }}:latest
            
            REVISION_NAME=$(az containerapp revision list \
                           --name ${{ inputs.CONTAINER_NAME }}  \
                           --resource-group ${{ vars.RESOURCE_GROUP }} \
                           --query [0].name)

            #Restart the container app
            az containerapp revision restart \
            --resource-group ${{ vars.RESOURCE_GROUP }}  \
            --name ${{ inputs.CONTAINER_NAME }}  \
            --revision $REVISION_NAME
            
  #load-testing:
  #  runs-on: ubuntu-latest
  #  environment: ${{ inputs.ACA_ENVIRONMENT }}
  #  needs: [deploy]
  #  steps:
  #    - uses: actions/checkout@v4
  #    - name: Azure login
  #      uses: azure/login@v2
  #      with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS }}
  #    - name: 'Azure Load Testing'
  #      uses: azure/load-testing@v1
  #      with:
  #        loadTestConfigFile: 'src/Java.Store.InventoryApi/src/test/resources/jmeter/config.yaml'
  #        loadTestResource: ${{ vars.LOAD_TESTING_COMP }}
  #        resourceGroup: ${{ vars.RESOURCE_GROUP }}
  #    - uses: actions/upload-artifact@v4.4.0
  #      with:
  #        name: loadTestResults
  #        path: ${{ github.workspace }}/loadTest